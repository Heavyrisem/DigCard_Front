{"version":3,"sources":["components/View.tsx","components/Create.tsx","components/Main.tsx","index.tsx"],"names":["View","id","useParams","useState","Card","setCard","a","fetch","ENDPOINT","method","result","json","js","card","alert","err","useEffect","console","log","ReadCardByID","author","name","job","email","Create","useRef","ResultURL","setResultURL","Fetching","setFetching","current","value","body","JSON","stringify","headers","response","type","placeholder","ref","onClick","to","window","location","host","Main","path","ReactDOM","render","document","getElementById"],"mappings":"4SAkDeA,MApCf,WACI,IAAQC,EAAOC,cAAPD,GACR,EAAwBE,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAFY,4CAUZ,WAA4BJ,GAA5B,iBAAAK,EAAA,sEACuBC,MAAM,GAAD,OAAIC,IAAJ,oBAAwBP,GAAM,CAClDQ,OAAQ,QAFhB,cACQC,EADR,gBAKkDA,EAAOC,OALzD,QAKQC,EALR,QAOWC,KAAMR,EAAQO,EAAGC,MACnBC,MAAMF,EAAGG,KARlB,4CAVY,sBAqBZ,OAhBAC,qBAAU,WACNC,QAAQC,IAAIjB,GANJ,oCAORkB,CAAalB,KACd,CAACA,IAcA,8BACKG,GACG,qCACI,+BAAKA,EAAKgB,OAAV,0BACA,iDAAUhB,EAAKiB,QACf,iDAAUjB,EAAKkB,OACf,uDAAWlB,EAAKmB,e,iBCqBrBC,MAzDf,WACI,IAAMH,EAAOI,iBAAyB,MAChCH,EAAMG,iBAAyB,MAC/BF,EAAQE,iBAAyB,MAEvC,EAAkCtB,mBAAiB,IAAnD,mBAAOuB,EAAP,KAAkBC,EAAlB,KACA,EAAgCxB,oBAAkB,GAAlD,mBAAOyB,EAAP,KAAiBC,EAAjB,KANc,4CAQd,sCAAAvB,EAAA,2DACQe,GAAQC,GAAOC,IAAUK,EADjC,wBAEQC,GAAY,GACNzB,EAAO,CACTiB,KAAI,UAAEA,EAAKS,eAAP,aAAE,EAAcC,MACpBT,IAAG,UAAEA,EAAIQ,eAAN,aAAE,EAAaC,MAClBR,MAAK,UAAEA,EAAMO,eAAR,aAAE,EAAeC,MACtBX,OAAQ,aAPpB,SAU6Bb,MAAM,GAAD,OAAIC,IAAJ,mBAA+B,CACrDC,OAAQ,OACRuB,KAAMC,KAAKC,UAAU9B,GACrB+B,QAAS,CAAC,eAAgB,sBAbtC,cAUYC,EAVZ,gBAewDA,EAASzB,OAfjE,QAeYD,EAfZ,QAiBmBT,GAEP0B,EAAa,SAAD,OAAUjB,EAAOT,KAE7Ba,MAAMJ,EAAOK,KAEjBc,GAAY,GAvBpB,6CARc,sBAmCd,OACI,gCACI,wCAEA,uBAAOQ,KAAK,OAAOC,YAAY,eAAKC,IAAKlB,IAAQ,uBACjD,uBAAOgB,KAAK,OAAOC,YAAY,eAAKC,IAAKjB,IAAO,uBAChD,uBAAOe,KAAK,OAAOC,YAAY,qBAAMC,IAAKhB,IAAS,uBAEnD,wBAAQiB,QA3CF,2CA2CN,0BAEA,uBACCd,GACG,qCACI,yDACA,cAAC,IAAD,CAAQK,MAAOL,IAAa,uBAC5B,cAAC,IAAD,CAAMe,GAAIf,EAAV,2BAAiCgB,OAAOC,SAASC,MAAjD,OAAwDlB,YClC7DmB,MAhBf,WACC,OACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACC,cAAC,EAAD,YCTLC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5cae03f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, useParams, Route } from 'react-router-dom';\r\n\r\nimport { ENDPOINT } from '../Config.json';\r\n\r\nexport interface Card_T {\r\n    [index: string]: string | undefined,\r\n    id?: string | undefined,\r\n    name: string,\r\n    job: string,\r\n    email: string,\r\n    author: string\r\n}\r\n\r\nfunction View() {\r\n    const { id } = useParams<{id: string}>();\r\n    const [Card, setCard] = useState<Card_T>();\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n        ReadCardByID(id);\r\n    }, [id]);\r\n\r\n    async function ReadCardByID(id: string) {\r\n        let result = await fetch(`${ENDPOINT}/v1/card/${id}`, {\r\n            method: \"GET\"\r\n        });\r\n        // console.log(await result.text());\r\n        let js: {card?: Card_T, err?: string} = await result.json();\r\n\r\n        if (js.card) setCard(js.card);\r\n        else alert(js.err);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Card&&\r\n                <>\r\n                    <h1>{Card.author} 의 명함</h1>\r\n                    <div>이름: {Card.name}</div>\r\n                    <div>직업: {Card.job}</div>\r\n                    <div>이메일: {Card.email}</div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default View;","import React, { useRef, useState } from 'react';\r\nimport QRCode from 'qrcode.react';\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport { ENDPOINT } from '../Config.json';\r\n\r\n\r\nfunction Create() {\r\n    const name = useRef<HTMLInputElement>(null);\r\n    const job = useRef<HTMLInputElement>(null);\r\n    const email = useRef<HTMLInputElement>(null);\r\n\r\n    const [ResultURL, setResultURL] = useState<string>(\"\");\r\n    const [Fetching, setFetching] = useState<boolean>(false);\r\n\r\n    async function Upload() {\r\n        if (name && job && email && !Fetching) {\r\n            setFetching(true);\r\n            const Card = {\r\n                name: name.current?.value,\r\n                job: job.current?.value,\r\n                email: email.current?.value,\r\n                author: \"Anonymous\"\r\n            }\r\n\r\n            let response = await fetch(`${ENDPOINT}/v1/card/create`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(Card),\r\n                headers: {'Content-Type': 'application/json'}\r\n            });\r\n            let result: {id?: string, err?: string} = await response.json();\r\n\r\n            if (result.id) {\r\n                // alert(`${ENDPOINT}/view/${result.id}`);\r\n                setResultURL(`/view/${result.id}`);\r\n            } else {\r\n                alert(result.err);\r\n            }\r\n            setFetching(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create</h1>\r\n\r\n            <input type=\"text\" placeholder=\"이름\" ref={name} /><br />\r\n            <input type=\"text\" placeholder=\"직업\" ref={job} /><br />\r\n            <input type=\"text\" placeholder=\"이메일\" ref={email} /><br />\r\n\r\n            <button onClick={Upload}>생성</button>\r\n\r\n            <br />\r\n            {ResultURL&& \r\n                <>\r\n                    <div>Share this QR Code/URL</div>\r\n                    <QRCode value={ResultURL} /><br />\r\n                    <Link to={ResultURL}>{`https://${window.location.host}${ResultURL}`}</Link>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport View from './View';\r\nimport Create from './Create';\r\n\r\nfunction Main() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/view/:id\">\r\n\t\t\t\t\t<View />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<Create />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Main from './components/Main';\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}